# Define a variable to be used on later steps
variables:
  nextvmid: ''
      
# Configure the pipeline
trigger: none

# Specify the agent pool
pool:
  name: debian

# Define the pipeline steps
jobs:    
  - job: find_latest_vmid
    displayName: Find latest VMid in Proxmox
    steps:
      # Run the script
      - bash: |
          # Get the next available ID
          #list=$(qm list; pct list)
          #nextid=$(echo "$list" | sort -k1,1n | tail -n1 | awk '{print $1}')
          #nextid=$(($nextid +1))
          #echo "##vso[task.setvariable variable=nextvmid;]$nextid"
          echo "##vso[task.setvariable variable=nextvmid]$(($(qm list; pct list | sort -k1,1n | tail -n1 | awk '{print $1}') +1))"

  - job: create_lxc
    displayName: Create LXC in Proxmox
    dependsOn: find_latest_vmid
    steps:
      # Run the script
      - bash: |
          # Create the container with the next available ID
          pct create $(nextvmid) /var/lib/vz/template/cache/debian-10.0-standard_10.0-1_amd64.tar.gz --hostname=mycontainer --storage=large --net0 name=eth0,bridge=vmbr0,ip=dhcp --nameserver=8.8.8.8

  - job: run_lxc
    displayName: Run LXC in Proxmox
    dependsOn: create_lxc
    steps:
      # Run the script
      - bash: |
          pct start $(nextvmid)
          
  - job: prepare_lxc
    displayName: Install dependencies in the LXC
    dependsOn: run_lxc
    steps:
      # Run the script
      - bash: |
          # Install dependencies
          pct exec $(nextvmid) -- apt -y update
          pct exec $(nextvmid) -- apt install -y python3-pip git
          pct exec $(nextvmid) -- pip3 install flask datetime
          
          # Clone Git repository
          pct exec $(nextvmid) -- git clone https://github.com/zingaya/worldcup2026.git
          
          # Make sure I have a path for executing Python
          pct exec $(nextvmid) -- export PATH=$PATH:/usr/local/bin
        
  - job: run_worldcup2026countdown
    displayName: Run the WorldCup 2026 Countdown app
    dependsOn: prepare_lxc
    steps:
      # Run the script
      - bash: |
          # Execute Python script
          pct exec $(nextvmid) -- nohup python3 worldcup2026/worldcup2026countdown.py &
        
#      # Send the pipeline status to Zabbix
#      - script: |
#          # Get the pipeline status
#          status = "$(Pipeline.Status)"
#
#          # Send the pipeline status to Zabbix using zabbix_sender
#          subprocess.run(["zabbix_sender", "--zabbix-server", "http://parameter", "--host", "World cup timer", "--key", "get.pipeline.trapper", "--value", status])
#        name: Send_the_pipeline_status_to_Zabbix
